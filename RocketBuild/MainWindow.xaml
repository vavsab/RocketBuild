<Window x:Class="RocketBuild.MainWindow" x:Name="ShellWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:deploy="clr-namespace:RocketBuild"
        xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:dragablz="http://dragablz.net/winfx/xaml/dragablz"
        mc:Ignorable="d" 
        Template="{StaticResource MaterialWindowTemplate}"
        Style="{StaticResource MaterialWindowStyle}"
        Icon="{StaticResource ApplicationIcon}"
        Height="500" Width="800" MinHeight="500" MinWidth="800"
        Title="RocketBuild"
        DataContext="{Binding Path=ViewModel, RelativeSource={RelativeSource Self}, Mode=OneWay}"
        Closing="OnClosing">
    <Grid>
        <Grid>
            <dragablz:TabablzControl FixedHeaderCount="3">

                <TabItem Header="Build">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <DataGrid Grid.Row="0" ItemsSource="{Binding Builds}"
					              AutoGenerateColumns="False" CanUserAddRows="False"
					              CanUserDeleteRows="False" CanUserResizeRows="False"
					              SelectionUnit="FullRow"
                                  md:DataGridAssist.CellPadding="13 8 8 8">
                            <DataGrid.Columns>
                                <DataGridCheckBoxColumn Header="" Binding="{Binding IsChecked}"
                                                        ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
                                                        EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}"/>
                                <DataGridTextColumn Header="Build name" IsReadOnly="True" Binding="{Binding Name}"/>

                                <DataGridHyperlinkColumn Header="Last build" IsReadOnly="True"
                                                         ContentBinding="{Binding LastBuild}" Binding="{Binding LastBuildLink}">
                                    <DataGridHyperlinkColumn.ElementStyle>
                                        <Style TargetType="TextBlock">
                                            <EventSetter Event="Hyperlink.Click" Handler="OnHyperlinkClick" />
                                        </Style>
                                    </DataGridHyperlinkColumn.ElementStyle>
                                </DataGridHyperlinkColumn>

                                <DataGridTextColumn Header="Last check-in" IsReadOnly="True" Binding="{Binding LastCheckin}"/>
                                <DataGridTextColumn Header="Status" IsReadOnly="True" Binding="{Binding LastBuildStatus}"/>
                                <DataGridTextColumn Header="Result" IsReadOnly="True" Binding="{Binding LastBuildResult}"/>
                            </DataGrid.Columns>
                        </DataGrid>

                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <StackPanel Grid.Column="0" HorizontalAlignment="Right" Orientation="Horizontal">
                                <Button Margin="8" Content="Refresh" Command="{Binding RefreshBuildsCommand}"/>
                            </StackPanel>

                            <StackPanel Grid.Column="2" HorizontalAlignment="Right" Orientation="Horizontal">
                                <Button Margin="8" Content="Build" Command="{Binding QueueBuildsCommand}"/>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </TabItem>

                <TabItem Header="Deploy">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="200"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <ListBox Grid.Column="0" Margin="8" DisplayMemberPath="Name" SelectionMode="Single"
						             ItemsSource="{Binding Environments}" SelectedItem="{Binding SelectedEnvironment}"/>

                            <DataGrid Grid.Column="1" ItemsSource="{Binding CurrentReleases}"
						              AutoGenerateColumns="False" CanUserAddRows="False"
						              CanUserDeleteRows="False" CanUserResizeRows="False"
						              SelectionUnit="FullRow">
                                <DataGrid.Columns>
                                    <DataGridCheckBoxColumn Header="" Binding="{Binding IsChecked}"
                                                            ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
                                                            EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}"/>

                                    <DataGridTextColumn Header="Release name" IsReadOnly="True" Binding="{Binding Name}"/>

                                    <DataGridHyperlinkColumn Header="Last deploy" IsReadOnly="True" 
                                                             ContentBinding="{Binding LastDeployedVersion}" Binding="{Binding LastDeployedVersionLink}">
                                        <DataGridHyperlinkColumn.ElementStyle>
                                            <Style TargetType="TextBlock">
                                                <EventSetter Event="Hyperlink.Click" Handler="OnHyperlinkClick" />
                                            </Style>
                                        </DataGridHyperlinkColumn.ElementStyle>
                                    </DataGridHyperlinkColumn>

                                    <DataGridHyperlinkColumn Header="Last release" IsReadOnly="True" 
                                                             ContentBinding="{Binding AvailableVersion}" Binding="{Binding AvailableVersionLink}">
                                        <DataGridHyperlinkColumn.ElementStyle>
                                            <Style TargetType="TextBlock">
                                                <EventSetter Event="Hyperlink.Click" Handler="OnHyperlinkClick" />
                                            </Style>
                                        </DataGridHyperlinkColumn.ElementStyle>
                                    </DataGridHyperlinkColumn>

                                    <DataGridTextColumn Header="Status" IsReadOnly="True" Binding="{Binding Status}"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>

                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <StackPanel Grid.Column="0" Orientation="Horizontal">
                                <Button Margin="8" Content="Refresh" Command="{Binding RefreshEnvironmentsCommand}"/>
                            </StackPanel>

                            <StackPanel Grid.Column="2" Orientation="Horizontal">
                                <Button Margin="8" Content="Deploy" Command="{Binding QueueDeployCommand}"/>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </TabItem>

                <TabItem Header="Settings">
                    <Grid Margin="8">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Row="0" Grid.Column="0" Margin="8" VerticalAlignment="Center" Text="API key" FontWeight="Bold"/>
                        <TextBox Grid.Row="0" Grid.Column="1" Margin="8" VerticalAlignment="Center" Text="{Binding ApiKey, Source={x:Static deploy:Settings.Current}, UpdateSourceTrigger=PropertyChanged}" />

                        <TextBlock Grid.Row="1" Grid.Column="0" Margin="8" VerticalAlignment="Center" Text="Project" FontWeight="Bold" />
                        <TextBox Grid.Row="1" Grid.Column="1" Margin="8" VerticalAlignment="Center" Text="{Binding Project, Source={x:Static deploy:Settings.Current}, UpdateSourceTrigger=PropertyChanged}" />

                        <TextBlock Grid.Row="2" Grid.Column="0" Margin="8" VerticalAlignment="Center" Text="Account URL" FontWeight="Bold" />
                        <TextBox Grid.Row="2" Grid.Column="1" Margin="8" VerticalAlignment="Center" Text="{Binding AccountUrl, Source={x:Static deploy:Settings.Current}, UpdateSourceTrigger=PropertyChanged}" />

                        <TextBlock Grid.Row="3" Grid.Column="0" Margin="8" VerticalAlignment="Center" Text="Use SSL" FontWeight="Bold" />
                        <ToggleButton Grid.Row="3" Grid.Column="1" Margin="8" VerticalAlignment="Center" HorizontalAlignment="Left" Style="{StaticResource MaterialDesignSwitchToggleButton}" IsChecked="{Binding UseSsl, Source={x:Static deploy:Settings.Current}, UpdateSourceTrigger=PropertyChanged}" />

                        <TextBlock Grid.Row="4" Grid.Column="0" Margin="8" VerticalAlignment="Center" Text="Build version regex" FontWeight="Bold" />
                        <TextBox Grid.Row="4" Grid.Column="1" Margin="8" VerticalAlignment="Center" Text="{Binding BuildNameExtractVersionRegex, Source={x:Static deploy:Settings.Current}, UpdateSourceTrigger=PropertyChanged}" />

                        <TextBlock Grid.Row="5" Grid.Column="0" Margin="8" VerticalAlignment="Center" Text="Release version regex" FontWeight="Bold" />
                        <TextBox Grid.Row="5" Grid.Column="1" Margin="8" VerticalAlignment="Center" Text="{Binding ReleaseNameExtractVersionRegex, Source={x:Static deploy:Settings.Current}, UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>
                </TabItem>
            </dragablz:TabablzControl>
        </Grid>

        <Grid Background="#88ffffff">
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Visibility" Value="Collapsed"/>

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsBusy}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>

            <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Orientation="Horizontal">
                <ProgressBar Margin="4" Style="{StaticResource MaterialDesignCircularProgressBar}" Value="0" IsIndeterminate="True"/>
                <TextBlock Margin="4" Text="Loading..."/>
            </StackPanel>
        </Grid>
    </Grid>
</Window>
